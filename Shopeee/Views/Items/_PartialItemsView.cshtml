@using Shopeee.Models;
@using Shopeee.Class;
@model IEnumerable<Shopeee.Models.Item>

@inject SignInManager<Shopeee.Areas.Identity.ApplicationUser> SignInManager
@inject UserManager<Shopeee.Areas.Identity.ApplicationUser> UserManager
@{
    var signed = false;
    var currentUser = new Shopeee.Areas.Identity.ApplicationUser();
    if (SignInManager.IsSignedIn(User))
    {
        currentUser = await UserManager.GetUserAsync(User);
        signed = true;
    }
}

<head>
    <link rel="stylesheet" href="~/css/items.css" />
</head>

<div class="grid-container">
    @foreach (var item in Model)
    {
        <div class="card">
            <a asp-action="Details" asp-route-id="@item.Id">
                <img src="@Url.Content(GlobalVariables.webImagesPath)@Html.DisplayFor(modelItem =>item.Picture)" style="width:100%">
            </a>
            <a asp-action="Details" asp-route-id="@item.Id">
                <p>@Html.DisplayFor(modelItem => item.Name)</p>
            </a>
            <input id="qty_@Html.DisplayFor(modelItem => item.Id)" type="number" class="form-control-item" min="1" max="@item.Quantity" value="1" />
            <p class="price">$@Html.DisplayFor(modelItem => item.Price)</p>
            @*<p>@Html.DisplayFor(modelItem => item.Description)</p>*@
            @if (signed)
            {
                <p><button class="btn-buy-now" onclick="addtoCart('@item.Id','@currentUser.Id')">Add to Cart</button></p>
            }
        </div>
    }
</div>

<script>
    function addtoCart(itemid, userid) {
        var qty = document.getElementById("qty_".concat(itemid)).value
        alert(qty)
        $.ajax({
            type: "POST",
            url: "@Url.Action("Create", "ShoppingCarts")",
            headers: {
                RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            data: {
                ItemId: itemid,
                Quantity: qty,
                UserId: userid
            },
            datatype: "html",
            success: function (data) {
                location.reload()
            }
        });
    }
</script>
